{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notifications.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","setFilter","value","onChange","event","target","placeholder","PersonForm","newName","newNumber","setNewName","setNewNumber","addPerson","onSubmit","console","log","type","Person","person","deletePerson","name","number","onClick","Persons","persons","lowerFilter","toLowerCase","p","includes","map","key","getNotification","message","style","setter","setTimeout","InfoNotification","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotification","baseUrl","responseData","resp","then","r","data","axios","get","newObject","post","id","put","delete","App","useState","setPersons","errorMessage","setErrorMessage","infoMessage","setInfoMessage","useEffect","personsService","preventDefault","newPerson","personExists","window","confirm","find","catch","error","response","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eae57e7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, setFilter }) => {\n\n  const searchFilter = (event) => setFilter(event.target.value)\n  \n  return (\n    <div>\n      filter shown with: {' '}\n      <input\n        value={filter}\n        onChange={searchFilter}\n        placeholder=\"Enter name...\"\n      />\n    </div>\n  )\n\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  setNewName,\n  setNewNumber,\n  addPerson,\n}) => {\n\n  const nameChanged = (event) => {\n    console.log('name value: ', event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const numberChanged = (event) => {\n    console.log('number value: ', event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input\n          value={newName}\n          onChange={nameChanged}\n          placeholder=\"New contact name\"\n        />\n      </div>\n      <div>\n        number: <input\n          value={newNumber}\n          onChange={numberChanged}\n          placeholder=\"New contact number\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.number}</td>\n    <td><button onClick={() => deletePerson(person)} >delete</button></td>\n  </tr>\n)\n\nconst Persons = ({ persons, filter, deletePerson }) => {\n  const lowerFilter = filter.toLowerCase()\n  return (\n    <table>\n      <tbody>\n        {\n          persons.filter(p => p.name.toLowerCase().includes(lowerFilter))\n            .map(p => (\n              <Person\n                key={p.name}\n                person={p}\n                deletePerson={deletePerson}\n              />\n            )\n          )\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst getNotification = (message, style, setter) => {\n  if (message) {\n    setTimeout(() => setter(null), 5000)\n    return (\n      <div style={style}>{message}</div>\n    )\n  }\n  return null\n}\n\nconst InfoNotification = ({ message, setter }) => {\n  const notificationStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n  return getNotification(message, notificationStyle, setter)\n}\n\nconst ErrorNotification = ({ message, setter }) => {\n  const notificationStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n  return getNotification(message, notificationStyle, setter)\n}\n\nexport {InfoNotification, ErrorNotification}\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst responseData = resp => resp.then(r => r.data)\n\nconst getAll = () => {\n  return responseData(axios.get(baseUrl))\n}\n\nconst create = newObject => {\n  return responseData(axios.post(baseUrl, newObject))\n}\n\nconst update = (id, newObject) => {\n  return responseData(axios.put(`${baseUrl}/${id}`, newObject))\n}\n\nconst deletePerson = (id) => {\n  return responseData(axios.delete(`${baseUrl}/${id}`))\n}\n\nexport default { getAll, create, update, deletePerson }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport { InfoNotification, ErrorNotification } from './components/Notifications'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ infoMessage, setInfoMessage ] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(data => setPersons(data))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = { name: newName, number:newNumber }\n    const personExists = persons.map(p => p.name).includes(newName)\n    if (\n      personExists &&\n      window.confirm(\n        `${newName} is already added to phonebook.\\n` +\n        'Would you like to update this entry?'\n      )\n    ) {\n      personsService\n        .update(persons.find(p => p.name === newName).id, newPerson)\n        .then(\n          person => setPersons(persons.map(\n            p => p.id !== person.id ? p : {...p, number:newNumber}\n          ))\n        )\n        .then(() => {setInfoMessage(`Added ${newName} successfully.`)})\n        .catch(error => setErrorMessage(error.response.data.error))\n      } else if (personExists) {  // user cancelled\n        return\n      } else {\n        personsService.create(newPerson)\n          .then(person => setPersons(persons.concat(person)))\n          .then(() => {setInfoMessage(`Added ${newName} successfully.`)})\n          .catch(error => setErrorMessage(error.response.data.error))\n    }\n    setNewName('')\n    setNewNumber('')\n}\n\n  const deletePerson = (person) => {\n    if (\n      !window.confirm(`Are you sure you want to delete ${person.name}?`)\n    ) { return }\n    personsService.deletePerson(person.id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n      .then(() => {setInfoMessage(`Deleted ${person.name} successfully.`)})\n      .catch(() => {\n        setErrorMessage(`${person.name} already deleted.`)\n        personsService\n          .getAll()\n          .then(data => setPersons(data))\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorNotification message={errorMessage} setter={setErrorMessage}/>\n      <InfoNotification message={infoMessage} setter={setInfoMessage}/>\n      <Filter filter={filter} setFilter={setFilter}/>\n      <h3>Addd new entry</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        filter={filter}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}